# Docker Compose configuration for H2spec compliance testing
# Split into two parts to prevent probe failures from test accumulation

services:
  # H2spec server that will be tested
  h2spec-server:
    build:
      context: .
      dockerfile: Dockerfile.h2spec
    container_name: ht2-h2spec-server
    hostname: h2spec-server
    networks:
      - h2spec-net
    environment:
      - HT2_LOG_LEVEL=INFO
      - LOG_LEVEL=INFO
    command: ./h2spec_server --host 0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-k", "https://localhost:8443/"]
      interval: 1s
      timeout: 5s
      retries: 30

  # H2spec Part 1: Sections 3-5 (DATA, SETTINGS, PING)
  h2spec-part1:
    image: summerwind/h2spec:2.6.0
    container_name: h2spec-part1
    networks:
      - h2spec-net
    depends_on:
      h2spec-server:
        condition: service_healthy
    command: -h h2spec-server -p 8443 -t -k http2/3 http2/4 http2/5
    volumes:
      - ./h2spec-results:/results
    working_dir: /results
    entrypoint: |
      sh -c "
        echo '=== H2spec Part 1: Testing sections 3-5 ==='
        h2spec -h h2spec-server -p 8443 -t -k http2/3 http2/4 http2/5 > part1_results.txt 2>&1
        EXIT_CODE=\$$?
        SUMMARY=\$$(tail -1 part1_results.txt)
        echo \"Part 1 Summary: \$$SUMMARY\"
        FAILED=\$$(echo \"\$$SUMMARY\" | grep -o '[0-9]* failed' | grep -o '[0-9]*' || echo '0')
        if [ \"\$$FAILED\" -eq 0 ]; then
          echo '✅ H2spec Part 1: All tests passed'
          exit 0
        else
          echo \"❌ H2spec Part 1: \$$FAILED tests failed\"
          cat part1_results.txt
          exit 1
        fi
      "

  # H2spec Part 2: Sections 6-8 (GOAWAY, WINDOW_UPDATE, CONTINUATION)
  h2spec-part2:
    image: summerwind/h2spec:2.6.0
    container_name: h2spec-part2
    networks:
      - h2spec-net
    depends_on:
      h2spec-server:
        condition: service_healthy
    command: -h h2spec-server -p 8443 -t -k http2/6 http2/7 http2/8
    volumes:
      - ./h2spec-results:/results
    working_dir: /results
    entrypoint: |
      sh -c "
        echo '=== H2spec Part 2: Testing sections 6-8 ==='
        h2spec -h h2spec-server -p 8443 -t -k http2/6 http2/7 http2/8 > part2_results.txt 2>&1
        EXIT_CODE=\$$?
        SUMMARY=\$$(tail -1 part2_results.txt)
        echo \"Part 2 Summary: \$$SUMMARY\"
        PASSED=\$$(echo \"\$$SUMMARY\" | grep -o '[0-9]* passed' | grep -o '[0-9]*' || echo '0')
        FAILED=\$$(echo \"\$$SUMMARY\" | grep -o '[0-9]* failed' | grep -o '[0-9]*' || echo '0')
        SKIPPED=\$$(echo \"\$$SUMMARY\" | grep -o '[0-9]* skipped' | grep -o '[0-9]*' || echo '0')
        echo \"Part 2 - Passed: \$$PASSED, Failed: \$$FAILED, Skipped: \$$SKIPPED\"
        # Allow up to 2 failures (known issues: 6.5.3/1 and 6.9.2/2)
        if [ \"\$$FAILED\" -le 2 ]; then
          echo \"✅ H2spec Part 2: \$$PASSED tests passed (failures within acceptable limit)\"
          exit 0
        else
          echo \"❌ H2spec Part 2: \$$FAILED tests failed (above threshold)\"
          cat part2_results.txt
          exit 1
        fi
      "

  # Run all h2spec tests (for comparison - expected to have probe failures)
  h2spec-full:
    image: summerwind/h2spec:2.6.0
    container_name: h2spec-full
    networks:
      - h2spec-net
    depends_on:
      h2spec-server:
        condition: service_healthy
    command: -h h2spec-server -p 8443 -t -k
    volumes:
      - ./h2spec-results:/results
    working_dir: /results
    entrypoint: |
      sh -c "
        echo '=== H2spec Full: Testing all sections (may have probe failures) ==='
        h2spec -h h2spec-server -p 8443 -t -k > full_results.txt 2>&1
        EXIT_CODE=\$$?
        SUMMARY=\$$(tail -1 full_results.txt)
        echo \"Full Test Summary: \$$SUMMARY\"
        PASSED=\$$(echo \"\$$SUMMARY\" | grep -o '[0-9]* passed' | grep -o '[0-9]*' || echo '0')
        if [ \"\$$PASSED\" -ge 144 ]; then
          echo \"✅ H2spec compliance: \$$PASSED/146 tests passed (acceptable)\"
          exit 0
        else
          echo \"❌ H2spec compliance: \$$PASSED/146 tests passed (below threshold)\"
          grep -A 5 -B 5 '×' full_results.txt || true
          exit 1
        fi
      "

networks:
  h2spec-net:
    driver: bridge